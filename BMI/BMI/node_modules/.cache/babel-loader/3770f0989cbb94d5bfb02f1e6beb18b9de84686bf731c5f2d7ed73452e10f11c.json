{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash doke\\\\OneDrive\\\\Desktop\\\\Pojects\\\\BMI\\\\BMI\\\\src\\\\components\\\\Result.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const [bmiData, setBmiData] = useState([]);\n  useEffect(() => {\n    const fetchBmiData = async () => {\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.get(\"http://localhost:5000/bmi\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setBmiData(response.data);\n    };\n    fetchBmiData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your BMI Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: bmiData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [\"BMI: \", data.bmi, \" \", getCategory(data.bmi)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Height: \", data.height, \" cm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Weight: \", data.weight, \" kg\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Date: \", data.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Result, \"jYT9LuCHjgOcROGqIbY66kUVbiM=\");\n_c = Result;\nconst getCategory = bmiValue => {\n  if (bmiValue < 18.5) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge bg-danger\",\n      children: \"Underweight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this); // Red badge for Underweight\n  } else if (bmiValue < 25) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge bg-success\",\n      children: \"Normal weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this); // Green badge for Normal weight\n  } else if (bmiValue < 30) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge bg-warning\",\n      children: \"Overweight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this); // Yellow badge for Overweight\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge bg-danger\",\n      children: \"Obese\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this); // Red badge for Obese\n  }\n};\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Result","_s","bmiData","setBmiData","fetchBmiData","token","localStorage","getItem","response","get","headers","Authorization","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","bmi","getCategory","height","weight","date","_c","bmiValue","$RefreshReg$"],"sources":["C:/Users/yash doke/OneDrive/Desktop/Pojects/BMI/BMI/src/components/Result.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Result = () => {\r\n  const [bmiData, setBmiData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBmiData = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      const response = await axios.get(\"http://localhost:5000/bmi\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setBmiData(response.data);\r\n    };\r\n    fetchBmiData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Your BMI Results</h2>\r\n      <div className=\"row\">\r\n        {bmiData.map((data, index) => (\r\n          <div className=\"col-md-4 mb-4\" key={index}>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">\r\n                  BMI: {data.bmi} {getCategory(data.bmi)}\r\n                </h5>\r\n                <p className=\"card-text\">Height: {data.height} cm</p>\r\n                <p className=\"card-text\">Weight: {data.weight} kg</p>\r\n                <p className=\"card-text\">Date: {data.date}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getCategory = (bmiValue) => {\r\n  if (bmiValue < 18.5) {\r\n    return <span className=\"badge bg-danger\">Underweight</span>; // Red badge for Underweight\r\n  } else if (bmiValue < 25) {\r\n    return <span className=\"badge bg-success\">Normal weight</span>; // Green badge for Normal weight\r\n  } else if (bmiValue < 30) {\r\n    return <span className=\"badge bg-warning\">Overweight</span>; // Yellow badge for Overweight\r\n  } else {\r\n    return <span className=\"badge bg-danger\">Obese</span>; // Red badge for Obese\r\n  }\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}